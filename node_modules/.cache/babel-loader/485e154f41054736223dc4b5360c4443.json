{"ast":null,"code":"import _classCallCheck from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Upgrad7\\\\image-viewer-master\\\\src\\\\common\\\\modal\\\\viewImageModal\\\\ViewImageModal.js\";\nimport React, { Component } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport './ViewImageModal.css';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { red } from \"@material-ui/core/colors\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nvar ViewImageModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewImageModal, _Component);\n\n  function ViewImageModal() {\n    var _this;\n\n    _classCallCheck(this, ViewImageModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewImageModal).call(this));\n\n    _this.onlikeMedia = function () {\n      var index = _this.props.imageIndex;\n      var l = _this.state.liked;\n      l[index] = !l[index];\n\n      _this.setState({\n        liked: l\n      });\n    };\n\n    _this.onAddComment = function () {\n      var index = _this.props.imageIndex;\n      var textbox = document.getElementById(\"add-user-comment-image\");\n\n      if (textbox.value == null || textbox.value.trim() === \"\") {\n        return;\n      }\n\n      var c = _this.state.comments;\n\n      if (c[index] == null) {\n        c[index] = [textbox.value];\n      } else {\n        c[index] = c[index].concat([textbox.value]);\n      }\n\n      _this.setState({\n        comments: c\n      });\n\n      textbox.value = '';\n    };\n\n    _this.state = {\n      anchorEl: null,\n      liked: [],\n      comments: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewImageModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var mediaObj = this.props.imageViewMediaObject;\n      var index = this.props.imageIndex;\n      var height = 0;\n      height = mediaObj ? parseInt(mediaObj.images.standard_resolution.height) * 0.4 : 0;\n      return React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.props.openImageViewModal,\n        onClose: this.props.onCloseImageViewModal,\n        onBackdropClick: this.props.onCloseImageViewModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, mediaObj ? React.createElement(\"img\", {\n        src: mediaObj.images.standard_resolution.url,\n        alt: mediaObj.images.standard_resolution.url,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }) : null), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          minHeight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, mediaObj ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: \"user-detail-section\",\n        container: true,\n        spacing: 1,\n        direction: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        alt: mediaObj.user.full_name,\n        src: mediaObj.user.profile_picture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), \" \", React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, mediaObj.user.username))), React.createElement(Divider, {\n        variant: \"fullWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, mediaObj.caption.text.split(\"#\")[0]), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, mediaObj.tags.map(function (tag) {\n        return React.createElement(\"span\", {\n          style: {\n            color: \"#1976d2\",\n            fontSize: \"14px\"\n          },\n          size: \"small\",\n          key: tag,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"#\", tag, \" \");\n      })), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"div\",\n        class: \"comment-section\",\n        style: {\n          minHeight: height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.comments && this.state.comments[index] && this.state.comments[index].length > 0 && this.state.comments[index].map(function (comment) {\n        return React.createElement(\"p\", {\n          style: {\n            fontSize: \"16px\",\n            fontWeight: \"bold\"\n          },\n          key: comment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, mediaObj.user.username, \":\"), \" \", comment);\n      })), React.createElement(CardActions, {\n        disableSpacing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"add to favorites\",\n        onClick: function onClick() {\n          return _this2.onlikeMedia();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.liked[index] ? React.createElement(FavoriteIcon, {\n        style: {\n          color: red[500]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }) : React.createElement(FavoriteBorderIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.liked[index] ? mediaObj.likes.count + 1 : mediaObj.likes.count, \" likes\")), React.createElement(Grid, {\n        className: \"comment-add-section\",\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"add-user-comment-image\",\n        className: \"add-comment-text-field\",\n        label: \"Add a comment\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        className: \"add-button-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"add-button\",\n        variant: \"contained\",\n        id: \"add-comments-button\",\n        color: \"primary\",\n        onClick: this.onAddComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Add\")))) : null))));\n    }\n  }]);\n\n  return ViewImageModal;\n}(Component);\n\nexport default ViewImageModal;","map":{"version":3,"sources":["E:/Upgrad7/image-viewer-master/src/common/modal/viewImageModal/ViewImageModal.js"],"names":["React","Component","Modal","Grid","Button","Avatar","Typography","IconButton","TextField","red","Divider","CardActions","FavoriteBorderIcon","FavoriteIcon","ViewImageModal","onlikeMedia","index","props","imageIndex","l","state","liked","setState","onAddComment","textbox","document","getElementById","value","trim","c","comments","concat","anchorEl","mediaObj","imageViewMediaObject","height","parseInt","images","standard_resolution","openImageViewModal","onCloseImageViewModal","url","width","minHeight","user","full_name","profile_picture","username","caption","text","split","tags","map","tag","color","fontSize","length","comment","fontWeight","likes","count"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;IAGMC,c;;;;;AACF,4BAAc;AAAA;;AAAA;;AACV;;AADU,UAQdC,WARc,GAQA,YAAM;AAChB,UAAIC,KAAK,GAAG,MAAKC,KAAL,CAAWC,UAAvB;AACA,UAAIC,CAAC,GAAG,MAAKC,KAAL,CAAWC,KAAnB;AACAF,MAAAA,CAAC,CAACH,KAAD,CAAD,GAAW,CAACG,CAAC,CAACH,KAAD,CAAb;;AACA,YAAKM,QAAL,CAAc;AACVD,QAAAA,KAAK,EAAEF;AADG,OAAd;AAGH,KAfa;;AAAA,UAiBdI,YAjBc,GAiBC,YAAM;AACjB,UAAIP,KAAK,GAAG,MAAKC,KAAL,CAAWC,UAAvB;AACA,UAAIM,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,CAAd;;AACA,UAAIF,OAAO,CAACG,KAAR,IAAiB,IAAjB,IAAyBH,OAAO,CAACG,KAAR,CAAcC,IAAd,OAAyB,EAAtD,EAA0D;AACtD;AACH;;AACD,UAAIC,CAAC,GAAG,MAAKT,KAAL,CAAWU,QAAnB;;AACA,UAAID,CAAC,CAACb,KAAD,CAAD,IAAY,IAAhB,EAAsB;AAClBa,QAAAA,CAAC,CAACb,KAAD,CAAD,GAAW,CAACQ,OAAO,CAACG,KAAT,CAAX;AACH,OAFD,MAEO;AACHE,QAAAA,CAAC,CAACb,KAAD,CAAD,GAAWa,CAAC,CAACb,KAAD,CAAD,CAASe,MAAT,CAAgB,CAACP,OAAO,CAACG,KAAT,CAAhB,CAAX;AACH;;AACD,YAAKL,QAAL,CAAc;AACVQ,QAAAA,QAAQ,EAAED;AADA,OAAd;;AAGAL,MAAAA,OAAO,CAACG,KAAR,GAAgB,EAAhB;AACH,KAjCa;;AAEV,UAAKP,KAAL,GAAa;AACTY,MAAAA,QAAQ,EAAE,IADD;AAETX,MAAAA,KAAK,EAAE,EAFE;AAGTS,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAFU;AAOb;;;;6BA4BQ;AAAA;;AACL,UAAIG,QAAQ,GAAG,KAAKhB,KAAL,CAAWiB,oBAA1B;AACA,UAAIlB,KAAK,GAAG,KAAKC,KAAL,CAAWC,UAAvB;AACA,UAAIiB,MAAM,GAAG,CAAb;AACAA,MAAAA,MAAM,GAAKF,QAAQ,GAAGG,QAAQ,CAACH,QAAQ,CAACI,MAAT,CAAgBC,mBAAhB,CAAoCH,MAArC,CAAR,GAAsD,GAAzD,GAA+D,CAAlF;AACA,aACI,oBAAC,KAAD;AACI,2BAAgB,oBADpB;AAEI,4BAAiB,0BAFrB;AAGI,QAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWsB,kBAHrB;AAII,QAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWuB,qBAJxB;AAKI,QAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWuB,qBALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,OAAO,EAAE,CAFb;AAGI,QAAA,SAAS,EAAC,KAHd;AAII,QAAA,OAAO,EAAC,QAJZ;AAKI,QAAA,UAAU,EAAC,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,QAAQ,GACL;AACI,QAAA,GAAG,EAAEA,QAAQ,CAACI,MAAT,CAAgBC,mBAAhB,CAAoCG,GAD7C;AAEI,QAAA,GAAG,EAAER,QAAQ,CAACI,MAAT,CAAgBC,mBAAhB,CAAoCG,GAF7C;AAGI,QAAA,KAAK,EAAE;AACHN,UAAAA,MAAM,EAAE,MADL;AAEHO,UAAAA,KAAK,EAAE;AAFJ,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GASL,IAVR,CAPJ,EAmBA,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACSV,QAAQ,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,qBAAhB;AACI,QAAA,SAAS,MADb;AAEI,QAAA,OAAO,EAAE,CAFb;AAGI,QAAA,SAAS,EAAC,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,GAAG,EAAEA,QAAQ,CAACW,IAAT,CAAcC,SADvB;AAEI,QAAA,GAAG,EAAEZ,QAAQ,CAACW,IAAT,CAAcE,eAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,EAUY,GAVZ,EAWI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,KAAK,EAAC,eAFV;AAGI,QAAA,SAAS,EAAC,GAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKb,QAAQ,CAACW,IAAT,CAAcG,QALnB,CADJ,CAXJ,CADJ,EAsBI,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBJ,EAuBI,oBAAC,UAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,KAAK,EAAC,eAFV;AAGI,QAAA,SAAS,EAAC,GAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKd,QAAQ,CAACe,OAAT,CAAiBC,IAAjB,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CALL,CAvBJ,EA8BI,oBAAC,UAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,KAAK,EAAC,eAFV;AAGI,QAAA,SAAS,EAAC,GAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKjB,QAAQ,CAACkB,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG,EAAI;AACtB,eACI;AACI,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,QAAQ,EAAE;AAA9B,WADX;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,GAAG,EAAEF,GAHT;AAII,UAAA,KAAK,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMMA,GANN,EAMW,GANX,CADJ;AAUH,OAXA,CALL,CA9BJ,EAgDI,oBAAC,UAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,KAAK,EAAC,eAFV;AAGI,QAAA,SAAS,EAAC,KAHd;AAII,QAAA,KAAK,EAAC,iBAJV;AAKI,QAAA,KAAK,EAAE;AAACV,UAAAA,SAAS,EAAER;AAAZ,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOK,KAAKf,KAAL,CAAWU,QAAX,IACG,KAAKV,KAAL,CAAWU,QAAX,CAAoBd,KAApB,CADH,IAEG,KAAKI,KAAL,CAAWU,QAAX,CAAoBd,KAApB,EAA2BwC,MAA3B,GAAoC,CAFvC,IAGG,KAAKpC,KAAL,CAAWU,QAAX,CAAoBd,KAApB,EAA2BoC,GAA3B,CAA+B,UAAAK,OAAO,EAAI;AACtC,eACI;AACI,UAAA,KAAK,EAAE;AAAEF,YAAAA,QAAQ,EAAE,MAAZ;AAAoBG,YAAAA,UAAU,EAAE;AAAhC,WADX;AAEI,UAAA,GAAG,EAAED,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIxB,QAAQ,CAACW,IAAT,CAAcG,QAAlB,MAJJ,OAIsCU,OAJtC,CADJ;AAQH,OATD,CAVR,CAhDJ,EAqEI,oBAAC,WAAD;AAAa,QAAA,cAAc,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,sBAAW,kBAAvB;AAA0C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC1C,WAAL,EAAN;AAAA,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKK,KAAL,CAAWC,KAAX,CAAiBL,KAAjB,IAA0B,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEsC,UAAAA,KAAK,EAAE7C,GAAG,CAAC,GAAD;AAAZ,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,GAAyE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD9E,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKW,KAAL,CAAWC,KAAX,CAAiBL,KAAjB,IAA0BiB,QAAQ,CAAC0B,KAAT,CAAeC,KAAf,GAAuB,CAAjD,GAAqD3B,QAAQ,CAAC0B,KAAT,CAAeC,KAA3E,WAJJ,CArEJ,EA2EI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAsC,QAAA,SAAS,MAA/C;AAAgD,QAAA,OAAO,EAAE,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,wBAAd;AAAuC,QAAA,SAAS,EAAC,wBAAjD;AAA0E,QAAA,KAAK,EAAC,eAAhF;AAAgG,QAAA,SAAS,EAAE,IAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,SAAS,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,EAAE,EAAC,qBAFP;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,OAAO,EAAE,KAAKrC,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CAJJ,CA3EJ,CADK,GAyFL,IA1FZ,CAnBA,CADJ,CAPJ,CADJ;AA4HH;;;;EArKwBtB,S;;AAwK7B,eAAea,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport './ViewImageModal.css';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { red } from \"@material-ui/core/colors\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\n\nclass ViewImageModal extends Component {\n    constructor() {\n        super();\n        this.state = {\n            anchorEl: null,\n            liked: [],\n            comments: []\n        }\n    }\n    onlikeMedia = () => {\n        let index = this.props.imageIndex;\n        let l = this.state.liked;\n        l[index] = !l[index];\n        this.setState({\n            liked: l,\n        })\n    }\n\n    onAddComment = () => {\n        let index = this.props.imageIndex;\n        var textbox = document.getElementById(\"add-user-comment-image\");\n        if (textbox.value == null || textbox.value.trim() === \"\") {\n            return;\n        }\n        let c = this.state.comments;\n        if (c[index] == null) {\n            c[index] = [textbox.value];\n        } else {\n            c[index] = c[index].concat([textbox.value]);\n        }\n        this.setState({\n            comments: c,\n        })\n        textbox.value = '';\n    }\n\n    render() {\n        let mediaObj = this.props.imageViewMediaObject;\n        let index = this.props.imageIndex;\n        let height = 0;\n        height = ( mediaObj ? parseInt(mediaObj.images.standard_resolution.height)* 0.4 : 0);\n        return (\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={this.props.openImageViewModal}\n                onClose={this.props.onCloseImageViewModal}\n                onBackdropClick={this.props.onCloseImageViewModal}\n            >\n                <div class=\"modal-div\">\n                    <Grid\n                        container\n                        spacing={1}\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <Grid item xs={6}>\n                            {mediaObj ? (\n                                <img\n                                    src={mediaObj.images.standard_resolution.url}\n                                    alt={mediaObj.images.standard_resolution.url}\n                                    style={{\n                                        height: \"100%\",\n                                        width: \"100%\"\n                                    }}\n                                ></img>\n                            ) : null}\n                        </Grid>\n                    <Grid item xs={6} style={{minHeight: 'auto'}}>\n                            {mediaObj ? (\n                                <div>\n                                    <Grid className=\"user-detail-section\"\n                                        container\n                                        spacing={1}\n                                        direction=\"row\"\n                                    >\n                                        <Grid item xs={4}>\n                                            <Avatar\n                                                alt={mediaObj.user.full_name}\n                                                src={mediaObj.user.profile_picture}\n                                            />\n                                        </Grid>{\" \"}\n                                        <Grid item xs={8}>\n                                            <Typography\n                                                variant=\"body2\"\n                                                color=\"textSecondary\"\n                                                component=\"p\"\n                                            >\n                                                {mediaObj.user.username}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Divider variant=\"fullWidth\" />\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                        component=\"p\"\n                                    >\n                                        {mediaObj.caption.text.split(\"#\")[0]}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                        component=\"p\"\n                                    >\n                                        {mediaObj.tags.map(tag => {\n                                            return (\n                                                <span\n                                                    style={{ color: \"#1976d2\", fontSize: \"14px\" }}\n                                                    size=\"small\"\n                                                    key={tag}\n                                                    color=\"primary\"\n                                                >\n                                                    #{tag}{\" \"}\n                                                </span>\n                                            );\n                                        })}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                        component=\"div\"\n                                        class=\"comment-section\"\n                                        style={{minHeight: height}}\n                                    >\n                                        {this.state.comments &&\n                                            this.state.comments[index] &&\n                                            this.state.comments[index].length > 0 &&\n                                            this.state.comments[index].map(comment => {\n                                                return (\n                                                    <p\n                                                        style={{ fontSize: \"16px\", fontWeight: \"bold\" }}\n                                                        key={comment}\n                                                    >\n                                                        <b>{mediaObj.user.username}:</b> {comment}\n                                                    </p>\n                                                );\n                                            })}\n                                    </Typography>\n                                    <CardActions disableSpacing>\n                                        <IconButton aria-label=\"add to favorites\" onClick={() => this.onlikeMedia()}>\n                                            {this.state.liked[index] ? <FavoriteIcon style={{ color: red[500] }} /> : <FavoriteBorderIcon />}\n                                        </IconButton>\n                                        <span>{this.state.liked[index] ? mediaObj.likes.count + 1 : mediaObj.likes.count} likes</span>\n                                    </CardActions>\n                                    <Grid className=\"comment-add-section\" container spacing={3}>\n                                        <Grid item xs={10}>\n                                            <TextField id=\"add-user-comment-image\" className=\"add-comment-text-field\" label=\"Add a comment\" fullWidth={true} />\n                                        </Grid>\n                                        <Grid item xs={2} className=\"add-button-grid\">\n                                        <Button className=\"add-button\"\n                                            variant=\"contained\"\n                                            id=\"add-comments-button\"\n                                            color=\"primary\"\n                                            onClick={this.onAddComment} >Add</Button>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            ) : null}\n                        </Grid>\n                    </Grid>\n                </div>\n            </Modal >\n        );\n    }\n}\n\nexport default ViewImageModal;\n"]},"metadata":{},"sourceType":"module"}