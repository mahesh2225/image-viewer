{"ast":null,"code":"import _classCallCheck from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Upgrad7\\\\image-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Upgrad7\\\\image-viewer-master\\\\src\\\\common\\\\card\\\\MediaCard.js\";\nimport React, { Component } from 'react';\nimport { red } from '@material-ui/core/colors';\nimport './MediaCard.css';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Grid from '@material-ui/core/Grid';\nimport Moment from 'react-moment';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nvar MediaCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MediaCard, _Component);\n\n  function MediaCard() {\n    var _this;\n\n    _classCallCheck(this, MediaCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MediaCard).call(this));\n\n    _this.onlikeMedia = function (index) {\n      console.log(index);\n      var l = _this.state.liked;\n      l[index] = !l[index];\n\n      _this.setState({\n        liked: l\n      });\n    };\n\n    _this.onAddComment = function (index) {\n      var textbox = document.getElementById(\"textfield-\" + index);\n\n      if (textbox.value == null || textbox.value.trim() === \"\") {\n        return;\n      }\n\n      var c = _this.state.comments;\n\n      if (c[index] == null) {\n        c[index] = [textbox.value];\n      } else {\n        c[index] = c[index].concat([textbox.value]);\n      }\n\n      _this.setState({\n        comments: c\n      });\n\n      textbox.value = '';\n    };\n\n    _this.state = {\n      anchorEl: null,\n      liked: [],\n      comments: []\n    };\n    return _this;\n  }\n\n  _createClass(MediaCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const { classes } = this.props;\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.userMediaData && this.props.userMediaData.map(function (mediaObj, index) {\n        return React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          key: mediaObj.id,\n          alignItems: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          avatar: React.createElement(Avatar, {\n            variant: \"circle\",\n            alt: mediaObj.user.username,\n            src: mediaObj.user.profile_picture,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }),\n          title: mediaObj.user.username,\n          subheader: React.createElement(Moment, {\n            format: \"DD/MM/YYYY HH:mm:ss\",\n            interval: mediaObj.caption.created_time,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(CardMedia, {\n          image: mediaObj.images.standard_resolution.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          variant: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          component: \"p\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, mediaObj.caption.text.split(\"#\")[0]), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, mediaObj.tags.map(function (tag) {\n          return React.createElement(\"span\", {\n            style: {\n              color: \"#1976d2\",\n              fontSize: \"14px\"\n            },\n            size: \"small\",\n            key: tag,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"#\", tag, \" \");\n        })), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, _this2.state.comments && _this2.state.comments.length > 0 && _this2.state.comments[index] && _this2.state.comments[index].length > 0 && _this2.state.comments[index].map(function (comment) {\n          return React.createElement(\"p\", {\n            style: {\n              fontSize: \"16px\"\n            },\n            key: comment,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, mediaObj.user.username, \":\"), \" \", comment);\n        }))), React.createElement(CardActions, {\n          disableSpacing: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"add to favorites\",\n          onClick: function onClick() {\n            return _this2.onlikeMedia(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, _this2.state.liked[index] ? React.createElement(FavoriteIcon, {\n          style: {\n            color: red[500]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }) : React.createElement(FavoriteBorderIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, _this2.state.liked[index] ? mediaObj.likes.count + 1 : mediaObj.likes.count, \" likes\")), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"textfield-\" + index,\n          className: \"add-comment-text-field\",\n          label: \"Add a comment\",\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          className: \"add-button-grid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"add-button\",\n          variant: \"contained\",\n          id: \"add-comments-button\",\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this2.onAddComment(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Add\"))))));\n      }));\n    }\n  }]);\n\n  return MediaCard;\n}(Component);\n\nexport default MediaCard;","map":{"version":3,"sources":["E:/Upgrad7/image-viewer-master/src/common/card/MediaCard.js"],"names":["React","Component","red","Card","CardHeader","CardContent","CardMedia","CardActions","Avatar","IconButton","Typography","FavoriteBorderIcon","FavoriteIcon","Grid","Moment","Divider","TextField","Button","MediaCard","onlikeMedia","index","console","log","l","state","liked","setState","onAddComment","textbox","document","getElementById","value","trim","c","comments","concat","anchorEl","props","userMediaData","map","mediaObj","id","user","username","profile_picture","caption","created_time","images","standard_resolution","url","text","split","tags","tag","color","fontSize","length","comment","likes","count"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport { red } from '@material-ui/core/colors';\nimport './MediaCard.css';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Grid from '@material-ui/core/Grid';\nimport Moment from 'react-moment';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nclass MediaCard extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            anchorEl: null,\n            liked: [],\n            comments: []\n        }\n    }\n    onlikeMedia = (index) => {\n        console.log(index);\n        let l = this.state.liked; \n        l[index] = !l[index];\n        this.setState({\n            liked: l,\n        })   \n    }\n\n    onAddComment = (index) => {\n        var textbox = document.getElementById(\"textfield-\"+index);\n        if( textbox.value == null || textbox.value.trim() === \"\" ) {\n            return;\n        }\n        let c = this.state.comments;\n        if(c[index] == null) {\n            c[index] = [textbox.value];\n        } else {\n            c[index] = c[index].concat([textbox.value]);\n        }\n        this.setState({\n            comments: c,\n        }) \n        textbox.value = '';\n    }\n    \n\n    render() {\n    // const { classes } = this.props;\n    return (\n            <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\n                { this.props.userMediaData && this.props.userMediaData.map((mediaObj, index) => \n                    (<Grid item xs={6} key={mediaObj.id} alignItems='top' >\n                        <Card>\n                            <CardHeader\n                                avatar={ <Avatar variant=\"circle\" alt={mediaObj.user.username} src={mediaObj.user.profile_picture} /> }\n                                title={mediaObj.user.username}\n                                subheader={<Moment format=\"DD/MM/YYYY HH:mm:ss\" interval={mediaObj.caption.created_time} />}\n                            />\n                            <CardMedia image={mediaObj.images.standard_resolution.url} />\n                            <br/>\n                            <Divider variant=\"middle\"/>\n                            <CardContent>\n                                <Typography component=\"p\">\n                                    {mediaObj.caption.text.split(\"#\")[0]}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    {mediaObj.tags.map(tag => {\n                                    return (\n                                        <span style={{ color: \"#1976d2\", fontSize: \"14px\" }} size=\"small\" key={tag}>#{tag}{\" \"}\n                                        </span>\n                                        );\n                                    })}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\" >\n                                    {   this.state.comments &&\n                                        this.state.comments.length > 0 &&\n                                        this.state.comments[index] && \n                                        this.state.comments[index].length > 0 &&\n                                        this.state.comments[index].map(comment => {\n                                        return (\n                                            <p style={{ fontSize: \"16px\" }} key={comment}>\n                                            <b>{mediaObj.user.username}:</b> {comment}\n                                            </p>\n                                        );\n                                    })}\n                                </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing>\n                            <IconButton aria-label=\"add to favorites\" onClick={() => this.onlikeMedia(index)}>\n                                { this.state.liked[index] ? <FavoriteIcon style={{ color: red[500]}} /> : <FavoriteBorderIcon /> }\n                            </IconButton>\n                            <span>{ this.state.liked[index] ?  mediaObj.likes.count + 1 : mediaObj.likes.count } likes</span>\n                            </CardActions>\n                            <CardContent>\n                                <Grid container spacing={3}>\n                                    <Grid item xs={10}>\n                                        <TextField id={\"textfield-\"+index} className=\"add-comment-text-field\" label=\"Add a comment\" fullWidth={true} />\n                                    </Grid>\n                                    <Grid item xs={2} className=\"add-button-grid\">\n                                        <Button className=\"add-button\"\n                                            variant=\"contained\"\n                                            id=\"add-comments-button\"\n                                            color=\"primary\"\n                                            onClick={() => this.onAddComment(index)} >Add</Button>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                </Grid>))}\n          </Grid>\n        )\n    }\n}\n\nexport default MediaCard;"]},"metadata":{},"sourceType":"module"}